include:
  - local: '.gitlab/workflows/backend-pipeline.yml'
  - local: '.gitlab/workflows/frontend-admin-pipeline.yml'
  - local: '.gitlab/workflows/frontend-user-pipeline.yml'

stages:
  - build
  - test
  - docker
  - deploy

variables:
  DOCKER_REGISTRY: ${CI_REGISTRY}
  ENVIRONMENT: development

.docker-setup: &docker-setup
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - apk add --no-cache docker-compose

deploy-staging:
  <<: *docker-setup
  stage: deploy
  script:
    - echo "DOCKER_TAG=$CI_COMMIT_SHA" > .env
    - docker pull $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHA
    - docker pull $CI_REGISTRY_IMAGE/frontend-admin:$CI_COMMIT_SHA
    - docker pull $CI_REGISTRY_IMAGE/frontend-user:$CI_COMMIT_SHA
    - docker-compose up -d
  environment:
    name: staging
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

deploy-production:
  <<: *docker-setup
  stage: deploy
  script:
    - echo "DOCKER_TAG=$CI_COMMIT_TAG" > .env
    - docker pull $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_TAG
    - docker pull $CI_REGISTRY_IMAGE/frontend-admin:$CI_COMMIT_TAG
    - docker pull $CI_REGISTRY_IMAGE/frontend-user:$CI_COMMIT_TAG
    - docker-compose up -d
  environment:
    name: production
  rules:
    - if: $CI_COMMIT_TAG
  when: manual